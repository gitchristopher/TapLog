{
  "x-generator": "NSwag v13.3.0.0 (NJsonSchema v10.1.11.0 (Newtonsoft.Json v12.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "TapLog API",
    "version": "1.0.0"
  },
  "paths": {
    "/api/Cards": {
      "get": {
        "tags": [
          "Cards"
        ],
        "operationId": "Cards_GetAll",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CardDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Cards"
        ],
        "operationId": "Cards_Create",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCardCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Cards/{id}": {
      "get": {
        "tags": [
          "Cards"
        ],
        "operationId": "Cards_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "put": {
        "tags": [
          "Cards"
        ],
        "operationId": "Cards_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCardCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Cards"
        ],
        "operationId": "Cards_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Devices": {
      "get": {
        "tags": [
          "Devices"
        ],
        "operationId": "Devices_GetAll",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeviceDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Devices"
        ],
        "operationId": "Devices_Create",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDeviceCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Devices/{id}": {
      "get": {
        "tags": [
          "Devices"
        ],
        "operationId": "Devices_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceDetailDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "put": {
        "tags": [
          "Devices"
        ],
        "operationId": "Devices_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDeviceCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Devices"
        ],
        "operationId": "Devices_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Passes": {
      "get": {
        "tags": [
          "Passes"
        ],
        "operationId": "Passes_GetAll",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PassDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Passes"
        ],
        "operationId": "Passes_Create",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePassCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/Passes/{id}": {
      "get": {
        "tags": [
          "Passes"
        ],
        "operationId": "Passes_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PassDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Passes"
        ],
        "operationId": "Passes_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePassCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Passes"
        ],
        "operationId": "Passes_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Products": {
      "get": {
        "tags": [
          "Products"
        ],
        "operationId": "Products_GetAll",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Products"
        ],
        "operationId": "Products_Create",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/Products/{id}": {
      "get": {
        "tags": [
          "Products"
        ],
        "operationId": "Products_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Products"
        ],
        "operationId": "Products_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Products"
        ],
        "operationId": "Products_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Stages": {
      "get": {
        "tags": [
          "Stages"
        ],
        "operationId": "Stages_GetAll",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StageDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Stages"
        ],
        "operationId": "Stages_Create",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStageCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Stages/{id}": {
      "get": {
        "tags": [
          "Stages"
        ],
        "operationId": "Stages_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StageDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "put": {
        "tags": [
          "Stages"
        ],
        "operationId": "Stages_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStageCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Stages"
        ],
        "operationId": "Stages_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Suppliers": {
      "get": {
        "tags": [
          "Suppliers"
        ],
        "operationId": "Suppliers_GetAll",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SupplierDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Suppliers"
        ],
        "operationId": "Suppliers_Create",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSupplierCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Suppliers/{id}": {
      "get": {
        "tags": [
          "Suppliers"
        ],
        "operationId": "Suppliers_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SupplierDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "put": {
        "tags": [
          "Suppliers"
        ],
        "operationId": "Suppliers_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSupplierCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Suppliers"
        ],
        "operationId": "Suppliers_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Taps/addtapform": {
      "get": {
        "tags": [
          "Taps"
        ],
        "operationId": "Taps_GetTapForm",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddTapVM"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Taps": {
      "get": {
        "tags": [
          "Taps"
        ],
        "operationId": "Taps_GetAll",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TapDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Taps"
        ],
        "operationId": "Taps_Create",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTapCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Taps/data": {
      "get": {
        "tags": [
          "Taps"
        ],
        "operationId": "Taps_Get",
        "parameters": [
          {
            "name": "StageId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "TestId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "",
              "nullable": true
            },
            "x-position": 4
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TapDataVM"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Taps/{id}": {
      "get": {
        "tags": [
          "Taps"
        ],
        "operationId": "Taps_Get2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TapDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "put": {
        "tags": [
          "Taps"
        ],
        "operationId": "Taps_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTapCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Taps"
        ],
        "operationId": "Taps_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/TestExecutions": {
      "get": {
        "tags": [
          "TestExecutions"
        ],
        "operationId": "TestExecutions_GetAll",
        "parameters": [
          {
            "name": "testId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "stageId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TestExecutionDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "TestExecutions"
        ],
        "operationId": "TestExecutions_Create",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTestExecutionCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/TestExecutions/{id}": {
      "get": {
        "tags": [
          "TestExecutions"
        ],
        "operationId": "TestExecutions_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestExecutionDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "put": {
        "tags": [
          "TestExecutions"
        ],
        "operationId": "TestExecutions_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTestExecutionCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "TestExecutions"
        ],
        "operationId": "TestExecutions_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Tests": {
      "get": {
        "tags": [
          "Tests"
        ],
        "operationId": "Tests_GetAll",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TestDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Tests"
        ],
        "operationId": "Tests_Create",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTestCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Tests/{id}": {
      "get": {
        "tags": [
          "Tests"
        ],
        "operationId": "Tests_GetDetailedTest",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "put": {
        "tags": [
          "Tests"
        ],
        "operationId": "Tests_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTestCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Tests/stage/{stageId}": {
      "get": {
        "tags": [
          "Tests"
        ],
        "operationId": "Tests_GetTestsForStage",
        "parameters": [
          {
            "name": "stageId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TestDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Tests/{testId}": {
      "delete": {
        "tags": [
          "Tests"
        ],
        "operationId": "Tests_Delete",
        "parameters": [
          {
            "name": "testId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "stageId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/TodoItems": {
      "post": {
        "tags": [
          "TodoItems"
        ],
        "operationId": "TodoItems_Create",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTodoItemCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/TodoItems/{id}": {
      "put": {
        "tags": [
          "TodoItems"
        ],
        "operationId": "TodoItems_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTodoItemCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "TodoItems"
        ],
        "operationId": "TodoItems_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/TodoItems/UpdateItemDetails": {
      "put": {
        "tags": [
          "TodoItems"
        ],
        "operationId": "TodoItems_UpdateItemDetails",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTodoItemDetailCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/TodoLists": {
      "get": {
        "tags": [
          "TodoLists"
        ],
        "operationId": "TodoLists_Get",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TodosVm"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "TodoLists"
        ],
        "operationId": "TodoLists_Create",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTodoListCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/TodoLists/{id}": {
      "get": {
        "tags": [
          "TodoLists"
        ],
        "operationId": "TodoLists_Get2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "put": {
        "tags": [
          "TodoLists"
        ],
        "operationId": "TodoLists_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTodoListCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "TodoLists"
        ],
        "operationId": "TodoLists_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/WeatherForecast": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "operationId": "WeatherForecast_Get",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CardDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "number": {
            "type": "string",
            "nullable": true
          },
          "alias": {
            "type": "string",
            "nullable": true
          },
          "supplierId": {
            "type": "integer",
            "format": "int32"
          },
          "supplierName": {
            "type": "string",
            "nullable": true
          },
          "productId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "productName": {
            "type": "string",
            "nullable": true
          },
          "passId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "passName": {
            "type": "string",
            "nullable": true
          },
          "taps": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/TapDto"
            }
          }
        }
      },
      "TapDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "testExecutionId": {
            "type": "integer",
            "format": "int32"
          },
          "testJiraTestNumber": {
            "type": "string",
            "nullable": true
          },
          "cardId": {
            "type": "integer",
            "format": "int32"
          },
          "cardNumber": {
            "type": "string",
            "nullable": true
          },
          "cardAlias": {
            "type": "string",
            "nullable": true
          },
          "cardSupplierName": {
            "type": "string",
            "nullable": true
          },
          "deviceId": {
            "type": "integer",
            "format": "int32"
          },
          "deviceCode": {
            "type": "string",
            "nullable": true
          },
          "deviceName": {
            "type": "string",
            "nullable": true
          },
          "tester": {
            "type": "string",
            "nullable": true
          },
          "caseNumber": {
            "type": "string",
            "nullable": true
          },
          "result": {
            "type": "integer",
            "format": "int32"
          },
          "wasResultExpected": {
            "type": "integer",
            "format": "int32"
          },
          "timeOf": {
            "type": "string",
            "nullable": true
          },
          "fare": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "balanceBefore": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "balanceAfter": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "action": {
            "$ref": "#/components/schemas/TapAction"
          },
          "pass": {
            "type": "string",
            "nullable": true
          },
          "product": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "TapAction": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Entry",
          "Exit",
          "ForcedEntry",
          "ForcedExit",
          "Undo",
          "Cancel",
          "Transfer"
        ],
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ]
      },
      "CreateCardCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "number": {
            "type": "string",
            "nullable": true
          },
          "alias": {
            "type": "string",
            "nullable": true
          },
          "supplierId": {
            "type": "integer",
            "format": "int32"
          },
          "productId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "passId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "UpdateCardCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "number": {
            "type": "string",
            "nullable": true
          },
          "alias": {
            "type": "string",
            "nullable": true
          },
          "supplierId": {
            "type": "integer",
            "format": "int32"
          },
          "passId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "productId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "DeviceDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "zone": {
            "type": "integer",
            "format": "int32"
          },
          "latitude": {
            "type": "string",
            "nullable": true
          },
          "longitude": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "DeviceDetailDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "zone": {
            "type": "integer",
            "format": "int32"
          },
          "latitude": {
            "type": "string",
            "nullable": true
          },
          "longitude": {
            "type": "string",
            "nullable": true
          },
          "taps": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/TapDetailDto"
            }
          }
        }
      },
      "TapDetailDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "testExecutionId": {
            "type": "integer",
            "format": "int32"
          },
          "cardId": {
            "type": "integer",
            "format": "int32"
          },
          "cardNumber": {
            "type": "string",
            "nullable": true
          },
          "cardAlias": {
            "type": "string",
            "nullable": true
          },
          "cardSupplierName": {
            "type": "string",
            "nullable": true
          },
          "deviceId": {
            "type": "integer",
            "format": "int32"
          },
          "deviceCode": {
            "type": "string",
            "nullable": true
          },
          "deviceName": {
            "type": "string",
            "nullable": true
          },
          "tester": {
            "type": "string",
            "nullable": true
          },
          "caseNumber": {
            "type": "string",
            "nullable": true
          },
          "result": {
            "type": "integer",
            "format": "int32"
          },
          "wasResultExpected": {
            "type": "integer",
            "format": "int32"
          },
          "timeOf": {
            "type": "string",
            "format": "date-time"
          },
          "fare": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "balanceBefore": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "balanceAfter": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "action": {
            "$ref": "#/components/schemas/TapAction"
          }
        }
      },
      "CreateDeviceCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "zone": {
            "type": "integer",
            "format": "int32"
          },
          "latitude": {
            "type": "string",
            "nullable": true
          },
          "longitude": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UpdateDeviceCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "zone": {
            "type": "integer",
            "format": "int32"
          },
          "latitude": {
            "type": "string",
            "nullable": true
          },
          "longitude": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PassDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "cards": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CardDto"
            }
          }
        }
      },
      "CreatePassCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UpdatePassCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ProductDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "cards": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CardDto"
            }
          }
        }
      },
      "CreateProductCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UpdateProductCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "StageDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "isCurrent": {
            "type": "boolean"
          },
          "stageTests": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/StageTestDto"
            }
          }
        }
      },
      "StageTestDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "stageId": {
            "type": "integer",
            "format": "int32"
          },
          "testId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "isCurrent": {
            "type": "boolean"
          },
          "testExecutions": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/TestExecutionDto"
            }
          }
        }
      },
      "TestExecutionDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "stageTest": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/StageTestDto2"
              }
            ]
          },
          "taps": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/TapDto"
            }
          }
        }
      },
      "StageTestDto2": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "stageId": {
            "type": "integer",
            "format": "int32"
          },
          "testId": {
            "type": "integer",
            "format": "int32"
          },
          "jiraTestNumber": {
            "type": "string",
            "nullable": true
          },
          "stageName": {
            "type": "string",
            "nullable": true
          },
          "isCurrentStage": {
            "type": "boolean"
          }
        }
      },
      "CreateStageCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "isCurrent": {
            "type": "boolean"
          }
        }
      },
      "UpdateStageCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "isCurrent": {
            "type": "boolean"
          }
        }
      },
      "SupplierDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "cards": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CardDto"
            }
          }
        }
      },
      "CreateSupplierCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UpdateSupplierCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "AddTapVM": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "devices": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/DeviceDto"
            }
          },
          "cards": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CardDto"
            }
          },
          "passes": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/PassDto"
            }
          },
          "products": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ProductDto"
            }
          }
        }
      },
      "TapDataVM": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "tapDataRow": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/TapDataRowDto"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "TapDataRowDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "testExecutionId": {
            "type": "integer",
            "format": "int32"
          },
          "testId": {
            "type": "integer",
            "format": "int32"
          },
          "jira": {
            "type": "string",
            "nullable": true
          },
          "stage": {
            "type": "string",
            "nullable": true
          },
          "isCurrentStage": {
            "type": "boolean"
          },
          "cardId": {
            "type": "integer",
            "format": "int32"
          },
          "cardNumber": {
            "type": "string",
            "nullable": true
          },
          "cardAlias": {
            "type": "string",
            "nullable": true
          },
          "cardSupplierName": {
            "type": "string",
            "nullable": true
          },
          "deviceId": {
            "type": "integer",
            "format": "int32"
          },
          "deviceCode": {
            "type": "string",
            "nullable": true
          },
          "deviceName": {
            "type": "string",
            "nullable": true
          },
          "tester": {
            "type": "string",
            "nullable": true
          },
          "caseNumber": {
            "type": "string",
            "nullable": true
          },
          "result": {
            "type": "integer",
            "format": "int32"
          },
          "wasResultExpected": {
            "type": "integer",
            "format": "int32"
          },
          "timeOf": {
            "type": "string",
            "nullable": true
          },
          "fare": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "balanceBefore": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "balanceAfter": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "action": {
            "$ref": "#/components/schemas/TapAction"
          },
          "product": {
            "type": "string",
            "nullable": true
          },
          "pass": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateTapCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "testExecutionId": {
            "type": "integer",
            "format": "int32"
          },
          "cardId": {
            "type": "integer",
            "format": "int32"
          },
          "deviceId": {
            "type": "integer",
            "format": "int32"
          },
          "tester": {
            "type": "string",
            "nullable": true
          },
          "caseNumber": {
            "type": "string",
            "nullable": true
          },
          "result": {
            "$ref": "#/components/schemas/Result"
          },
          "wasResultExpected": {
            "$ref": "#/components/schemas/Expected"
          },
          "timeOf": {
            "type": "string",
            "nullable": true
          },
          "fare": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "balanceBefore": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "balanceAfter": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "action": {
            "$ref": "#/components/schemas/TapAction"
          },
          "passId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "productId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "Result": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Successful",
          "Unsuccessful",
          "None",
          "Other"
        ],
        "enum": [
          0,
          1,
          2,
          3
        ]
      },
      "Expected": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Yes",
          "No",
          "Unsure"
        ],
        "enum": [
          0,
          1,
          2
        ]
      },
      "UpdateTapCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "testExecutionId": {
            "type": "integer",
            "format": "int32"
          },
          "cardId": {
            "type": "integer",
            "format": "int32"
          },
          "deviceId": {
            "type": "integer",
            "format": "int32"
          },
          "tester": {
            "type": "string",
            "nullable": true
          },
          "caseNumber": {
            "type": "string",
            "nullable": true
          },
          "result": {
            "$ref": "#/components/schemas/Result"
          },
          "wasResultExpected": {
            "$ref": "#/components/schemas/Expected"
          },
          "timeOf": {
            "type": "string",
            "nullable": true
          },
          "fare": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "balanceBefore": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "balanceAfter": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "action": {
            "$ref": "#/components/schemas/TapAction"
          },
          "productId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "passId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "CreateTestExecutionCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "testId": {
            "type": "integer",
            "format": "int32"
          },
          "stageId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UpdateTestExecutionCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "TestDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "jiraTestNumber": {
            "type": "string",
            "nullable": true
          },
          "stageTests": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/StageTestDto3"
            }
          }
        }
      },
      "StageTestDto3": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "stageName": {
            "type": "string",
            "nullable": true
          },
          "stageIsCurrent": {
            "type": "boolean"
          },
          "stageId": {
            "type": "integer",
            "format": "int32"
          },
          "testExecutions": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/TestExecutionDto2"
            }
          }
        }
      },
      "TestExecutionDto2": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "taps": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/TapDto2"
            }
          }
        }
      },
      "TapDto2": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "cardId": {
            "type": "integer",
            "format": "int32"
          },
          "cardNumber": {
            "type": "string",
            "nullable": true
          },
          "cardAlias": {
            "type": "string",
            "nullable": true
          },
          "cardSupplierName": {
            "type": "string",
            "nullable": true
          },
          "deviceId": {
            "type": "integer",
            "format": "int32"
          },
          "deviceCode": {
            "type": "string",
            "nullable": true
          },
          "deviceName": {
            "type": "string",
            "nullable": true
          },
          "tester": {
            "type": "string",
            "nullable": true
          },
          "caseNumber": {
            "type": "string",
            "nullable": true
          },
          "result": {
            "type": "integer",
            "format": "int32"
          },
          "wasResultExpected": {
            "type": "integer",
            "format": "int32"
          },
          "timeOf": {
            "type": "string",
            "format": "date-time"
          },
          "fare": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "balanceBefore": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "balanceAfter": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "action": {
            "$ref": "#/components/schemas/TapAction"
          },
          "pass": {
            "type": "string",
            "nullable": true
          },
          "product": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateTestCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "jiraTestNumber": {
            "type": "string",
            "nullable": true
          },
          "stageId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UpdateTestCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "jiraTestNumber": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateTodoItemCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "listId": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UpdateTodoItemCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "done": {
            "type": "boolean"
          }
        }
      },
      "UpdateTodoItemDetailCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "listId": {
            "type": "integer",
            "format": "int32"
          },
          "priority": {
            "$ref": "#/components/schemas/PriorityLevel"
          },
          "note": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PriorityLevel": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "None",
          "Low",
          "Medium",
          "High"
        ],
        "enum": [
          0,
          1,
          2,
          3
        ]
      },
      "TodosVm": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "priorityLevels": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/PriorityLevelDto"
            }
          },
          "lists": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/TodoListDto"
            }
          }
        }
      },
      "PriorityLevelDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "value": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "TodoListDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/TodoItemDto"
            }
          }
        }
      },
      "TodoItemDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "listId": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "done": {
            "type": "boolean"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "note": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateTodoListCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UpdateTodoListCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WeatherForecast": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "temperatureC": {
            "type": "integer",
            "format": "int32"
          },
          "temperatureF": {
            "type": "integer",
            "format": "int32"
          },
          "summary": {
            "type": "string",
            "nullable": true
          }
        }
      }
    },
    "securitySchemes": {
      "JWT": {
        "type": "apiKey",
        "description": "Type into the textbox: Bearer {your JWT token}.",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "JWT": []
    }
  ]
}